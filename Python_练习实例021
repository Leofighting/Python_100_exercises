# 有 n 个人围成1圈，顺序排号
# 从第一个人开始，从1到k（假设k=3）报数
# 报到k的人退出圈子，然后圈子缩小，从下一个人继续游戏
# 问最后留下来的是原来的第几号？

from itertools import cycle


def demo(lst, k):
    # 切片，以免影响原来的数据
    t_lst = lst[:]
    # 游戏一直进行到只剩下最后一个人
    while len(t_lst) > 1:
        # 创建 cycle 对象
        c = cycle(t_lst)
        # 从 1 到 k 报数
        for i in range(k):
            t = next(c)
        # 一个人出具，圈子缩小
        index = t_lst.index(t)
        t_lst = t_lst[:index] + t_lst[index+1:]
        # 测试用，查看每次一个人出局后剩余人的编号
        print(t_lst)
    # 游戏结束
    return t_lst[0]


lst = list(range(1, 11))
print(demo(lst, 3))


# 个人笔记：
# cycle(iterable):
# 创建一个迭代器
# 对iterable中的元素反复执行循环操作
# 内部会生成iterable中的元素的一个副本，此副本用于返回循环中的重复项。

